parameters:
 buildConfiguration: 'Release'
  
steps:
- task: DotNetCoreCLI@2
  displayName: 'Build the project - ${{parameters.buildConfiguration}}'
  inputs:
      command: 'build'
      arguments: '--no-restore --configuration ${{parameters.buildConfiguration}}'
      projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Install ReportGenerator'
  inputs:
    command: custom
    custom: tool
    arguments: 'install --global dotnet-reportgenerator-globaltool'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests - ${{parameters.buildConfiguration}}'
  inputs:
    command: 'test'
    arguments: '--no-build --configuration ${{parameters.buildConfiguration}}'
    publishTestResults: true
    projects: '**/*.Tests.csproj'

- script: $(Build.SourcesDirectory)
    displayName: 'Run a one-lien scribt'

- bash: ls -R $(System.DefaultWorkingDirectory)

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - ${{parameters.buildConfiguration}}'
  inputs:
      command: 'publish'
      projects: '**/*.csproj'
      publishWebProjects: false
      arguments: '--no-build --configuration ${{parameters.buildConfiguration}} --output $(Build.ArtifactStagingDirectory)/${{parameters.buildConfiguration}}'
      zipAfterPublish: true